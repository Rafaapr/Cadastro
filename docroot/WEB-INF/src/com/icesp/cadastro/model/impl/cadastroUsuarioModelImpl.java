/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.icesp.cadastro.model.impl;

import com.icesp.cadastro.model.cadastroUsuario;
import com.icesp.cadastro.model.cadastroUsuarioModel;
import com.icesp.cadastro.model.cadastroUsuarioSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the cadastroUsuario service. Represents a row in the &quot;icesp_cadastroUsuario&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.icesp.cadastro.model.cadastroUsuarioModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link cadastroUsuarioImpl}.
 * </p>
 *
 * @author ln00704
 * @see cadastroUsuarioImpl
 * @see com.icesp.cadastro.model.cadastroUsuario
 * @see com.icesp.cadastro.model.cadastroUsuarioModel
 * @generated
 */
@JSON(strict = true)
public class cadastroUsuarioModelImpl extends BaseModelImpl<cadastroUsuario>
	implements cadastroUsuarioModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a cadastro usuario model instance should use the {@link com.icesp.cadastro.model.cadastroUsuario} interface instead.
	 */
	public static final String TABLE_NAME = "icesp_cadastroUsuario";
	public static final Object[][] TABLE_COLUMNS = {
			{ "cpf", Types.VARCHAR },
			{ "rg", Types.VARCHAR },
			{ "nome", Types.VARCHAR },
			{ "userName", Types.VARCHAR },
			{ "sobrenome", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "emailconfir", Types.VARCHAR },
			{ "senha", Types.VARCHAR },
			{ "senhaconfir", Types.VARCHAR },
			{ "celular", Types.VARCHAR },
			{ "sexo", Types.VARCHAR },
			{ "date_", Types.TIMESTAMP },
			{ "cep", Types.VARCHAR },
			{ "estado", Types.VARCHAR },
			{ "cidade", Types.VARCHAR },
			{ "rua", Types.VARCHAR },
			{ "profissao", Types.VARCHAR },
			{ "hospital", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table icesp_cadastroUsuario (cpf VARCHAR(75) not null primary key,rg VARCHAR(75) null,nome VARCHAR(75) null,userName VARCHAR(75) null,sobrenome VARCHAR(75) null,email VARCHAR(75) null,emailconfir VARCHAR(75) null,senha VARCHAR(75) null,senhaconfir VARCHAR(75) null,celular VARCHAR(75) null,sexo VARCHAR(75) null,date_ DATE null,cep VARCHAR(75) null,estado VARCHAR(75) null,cidade VARCHAR(75) null,rua VARCHAR(75) null,profissao VARCHAR(75) null,hospital VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table icesp_cadastroUsuario";
	public static final String ORDER_BY_JPQL = " ORDER BY cadastroUsuario.nome ASC";
	public static final String ORDER_BY_SQL = " ORDER BY icesp_cadastroUsuario.nome ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.icesp.cadastro.model.cadastroUsuario"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.icesp.cadastro.model.cadastroUsuario"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static cadastroUsuario toModel(cadastroUsuarioSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		cadastroUsuario model = new cadastroUsuarioImpl();

		model.setCpf(soapModel.getCpf());
		model.setRg(soapModel.getRg());
		model.setNome(soapModel.getNome());
		model.setUserName(soapModel.getUserName());
		model.setSobrenome(soapModel.getSobrenome());
		model.setEmail(soapModel.getEmail());
		model.setEmailconfir(soapModel.getEmailconfir());
		model.setSenha(soapModel.getSenha());
		model.setSenhaconfir(soapModel.getSenhaconfir());
		model.setCelular(soapModel.getCelular());
		model.setSexo(soapModel.getSexo());
		model.setDate(soapModel.getDate());
		model.setCep(soapModel.getCep());
		model.setEstado(soapModel.getEstado());
		model.setCidade(soapModel.getCidade());
		model.setRua(soapModel.getRua());
		model.setProfissao(soapModel.getProfissao());
		model.setHospital(soapModel.getHospital());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<cadastroUsuario> toModels(
		cadastroUsuarioSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<cadastroUsuario> models = new ArrayList<cadastroUsuario>(soapModels.length);

		for (cadastroUsuarioSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.icesp.cadastro.model.cadastroUsuario"));

	public cadastroUsuarioModelImpl() {
	}

	public String getPrimaryKey() {
		return _cpf;
	}

	public void setPrimaryKey(String primaryKey) {
		setCpf(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return _cpf;
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	public Class<?> getModelClass() {
		return cadastroUsuario.class;
	}

	public String getModelClassName() {
		return cadastroUsuario.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("cpf", getCpf());
		attributes.put("rg", getRg());
		attributes.put("nome", getNome());
		attributes.put("userName", getUserName());
		attributes.put("sobrenome", getSobrenome());
		attributes.put("email", getEmail());
		attributes.put("emailconfir", getEmailconfir());
		attributes.put("senha", getSenha());
		attributes.put("senhaconfir", getSenhaconfir());
		attributes.put("celular", getCelular());
		attributes.put("sexo", getSexo());
		attributes.put("date", getDate());
		attributes.put("cep", getCep());
		attributes.put("estado", getEstado());
		attributes.put("cidade", getCidade());
		attributes.put("rua", getRua());
		attributes.put("profissao", getProfissao());
		attributes.put("hospital", getHospital());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String cpf = (String)attributes.get("cpf");

		if (cpf != null) {
			setCpf(cpf);
		}

		String rg = (String)attributes.get("rg");

		if (rg != null) {
			setRg(rg);
		}

		String nome = (String)attributes.get("nome");

		if (nome != null) {
			setNome(nome);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		String sobrenome = (String)attributes.get("sobrenome");

		if (sobrenome != null) {
			setSobrenome(sobrenome);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String emailconfir = (String)attributes.get("emailconfir");

		if (emailconfir != null) {
			setEmailconfir(emailconfir);
		}

		String senha = (String)attributes.get("senha");

		if (senha != null) {
			setSenha(senha);
		}

		String senhaconfir = (String)attributes.get("senhaconfir");

		if (senhaconfir != null) {
			setSenhaconfir(senhaconfir);
		}

		String celular = (String)attributes.get("celular");

		if (celular != null) {
			setCelular(celular);
		}

		String sexo = (String)attributes.get("sexo");

		if (sexo != null) {
			setSexo(sexo);
		}

		Date date = (Date)attributes.get("date");

		if (date != null) {
			setDate(date);
		}

		String cep = (String)attributes.get("cep");

		if (cep != null) {
			setCep(cep);
		}

		String estado = (String)attributes.get("estado");

		if (estado != null) {
			setEstado(estado);
		}

		String cidade = (String)attributes.get("cidade");

		if (cidade != null) {
			setCidade(cidade);
		}

		String rua = (String)attributes.get("rua");

		if (rua != null) {
			setRua(rua);
		}

		String profissao = (String)attributes.get("profissao");

		if (profissao != null) {
			setProfissao(profissao);
		}

		String hospital = (String)attributes.get("hospital");

		if (hospital != null) {
			setHospital(hospital);
		}
	}

	@JSON
	public String getCpf() {
		if (_cpf == null) {
			return StringPool.BLANK;
		}
		else {
			return _cpf;
		}
	}

	public void setCpf(String cpf) {
		_cpf = cpf;
	}

	@JSON
	public String getRg() {
		if (_rg == null) {
			return StringPool.BLANK;
		}
		else {
			return _rg;
		}
	}

	public void setRg(String rg) {
		_rg = rg;
	}

	@JSON
	public String getNome() {
		if (_nome == null) {
			return StringPool.BLANK;
		}
		else {
			return _nome;
		}
	}

	public void setNome(String nome) {
		_nome = nome;
	}

	@JSON
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	public String getSobrenome() {
		if (_sobrenome == null) {
			return StringPool.BLANK;
		}
		else {
			return _sobrenome;
		}
	}

	public void setSobrenome(String sobrenome) {
		_sobrenome = sobrenome;
	}

	@JSON
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	public void setEmail(String email) {
		_email = email;
	}

	@JSON
	public String getEmailconfir() {
		if (_emailconfir == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailconfir;
		}
	}

	public void setEmailconfir(String emailconfir) {
		_emailconfir = emailconfir;
	}

	@JSON
	public String getSenha() {
		if (_senha == null) {
			return StringPool.BLANK;
		}
		else {
			return _senha;
		}
	}

	public void setSenha(String senha) {
		_senha = senha;
	}

	@JSON
	public String getSenhaconfir() {
		if (_senhaconfir == null) {
			return StringPool.BLANK;
		}
		else {
			return _senhaconfir;
		}
	}

	public void setSenhaconfir(String senhaconfir) {
		_senhaconfir = senhaconfir;
	}

	@JSON
	public String getCelular() {
		if (_celular == null) {
			return StringPool.BLANK;
		}
		else {
			return _celular;
		}
	}

	public void setCelular(String celular) {
		_celular = celular;
	}

	@JSON
	public String getSexo() {
		if (_sexo == null) {
			return StringPool.BLANK;
		}
		else {
			return _sexo;
		}
	}

	public void setSexo(String sexo) {
		_sexo = sexo;
	}

	@JSON
	public Date getDate() {
		return _date;
	}

	public void setDate(Date date) {
		_date = date;
	}

	@JSON
	public String getCep() {
		if (_cep == null) {
			return StringPool.BLANK;
		}
		else {
			return _cep;
		}
	}

	public void setCep(String cep) {
		_cep = cep;
	}

	@JSON
	public String getEstado() {
		if (_estado == null) {
			return StringPool.BLANK;
		}
		else {
			return _estado;
		}
	}

	public void setEstado(String estado) {
		_estado = estado;
	}

	@JSON
	public String getCidade() {
		if (_cidade == null) {
			return StringPool.BLANK;
		}
		else {
			return _cidade;
		}
	}

	public void setCidade(String cidade) {
		_cidade = cidade;
	}

	@JSON
	public String getRua() {
		if (_rua == null) {
			return StringPool.BLANK;
		}
		else {
			return _rua;
		}
	}

	public void setRua(String rua) {
		_rua = rua;
	}

	@JSON
	public String getProfissao() {
		if (_profissao == null) {
			return StringPool.BLANK;
		}
		else {
			return _profissao;
		}
	}

	public void setProfissao(String profissao) {
		_profissao = profissao;
	}

	@JSON
	public String getHospital() {
		if (_hospital == null) {
			return StringPool.BLANK;
		}
		else {
			return _hospital;
		}
	}

	public void setHospital(String hospital) {
		_hospital = hospital;
	}

	@Override
	public cadastroUsuario toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (cadastroUsuario)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		cadastroUsuarioImpl cadastroUsuarioImpl = new cadastroUsuarioImpl();

		cadastroUsuarioImpl.setCpf(getCpf());
		cadastroUsuarioImpl.setRg(getRg());
		cadastroUsuarioImpl.setNome(getNome());
		cadastroUsuarioImpl.setUserName(getUserName());
		cadastroUsuarioImpl.setSobrenome(getSobrenome());
		cadastroUsuarioImpl.setEmail(getEmail());
		cadastroUsuarioImpl.setEmailconfir(getEmailconfir());
		cadastroUsuarioImpl.setSenha(getSenha());
		cadastroUsuarioImpl.setSenhaconfir(getSenhaconfir());
		cadastroUsuarioImpl.setCelular(getCelular());
		cadastroUsuarioImpl.setSexo(getSexo());
		cadastroUsuarioImpl.setDate(getDate());
		cadastroUsuarioImpl.setCep(getCep());
		cadastroUsuarioImpl.setEstado(getEstado());
		cadastroUsuarioImpl.setCidade(getCidade());
		cadastroUsuarioImpl.setRua(getRua());
		cadastroUsuarioImpl.setProfissao(getProfissao());
		cadastroUsuarioImpl.setHospital(getHospital());

		cadastroUsuarioImpl.resetOriginalValues();

		return cadastroUsuarioImpl;
	}

	public int compareTo(cadastroUsuario cadastroUsuario) {
		int value = 0;

		value = getNome().compareTo(cadastroUsuario.getNome());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		cadastroUsuario cadastroUsuario = null;

		try {
			cadastroUsuario = (cadastroUsuario)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		String primaryKey = cadastroUsuario.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<cadastroUsuario> toCacheModel() {
		cadastroUsuarioCacheModel cadastroUsuarioCacheModel = new cadastroUsuarioCacheModel();

		cadastroUsuarioCacheModel.cpf = getCpf();

		String cpf = cadastroUsuarioCacheModel.cpf;

		if ((cpf != null) && (cpf.length() == 0)) {
			cadastroUsuarioCacheModel.cpf = null;
		}

		cadastroUsuarioCacheModel.rg = getRg();

		String rg = cadastroUsuarioCacheModel.rg;

		if ((rg != null) && (rg.length() == 0)) {
			cadastroUsuarioCacheModel.rg = null;
		}

		cadastroUsuarioCacheModel.nome = getNome();

		String nome = cadastroUsuarioCacheModel.nome;

		if ((nome != null) && (nome.length() == 0)) {
			cadastroUsuarioCacheModel.nome = null;
		}

		cadastroUsuarioCacheModel.userName = getUserName();

		String userName = cadastroUsuarioCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			cadastroUsuarioCacheModel.userName = null;
		}

		cadastroUsuarioCacheModel.sobrenome = getSobrenome();

		String sobrenome = cadastroUsuarioCacheModel.sobrenome;

		if ((sobrenome != null) && (sobrenome.length() == 0)) {
			cadastroUsuarioCacheModel.sobrenome = null;
		}

		cadastroUsuarioCacheModel.email = getEmail();

		String email = cadastroUsuarioCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			cadastroUsuarioCacheModel.email = null;
		}

		cadastroUsuarioCacheModel.emailconfir = getEmailconfir();

		String emailconfir = cadastroUsuarioCacheModel.emailconfir;

		if ((emailconfir != null) && (emailconfir.length() == 0)) {
			cadastroUsuarioCacheModel.emailconfir = null;
		}

		cadastroUsuarioCacheModel.senha = getSenha();

		String senha = cadastroUsuarioCacheModel.senha;

		if ((senha != null) && (senha.length() == 0)) {
			cadastroUsuarioCacheModel.senha = null;
		}

		cadastroUsuarioCacheModel.senhaconfir = getSenhaconfir();

		String senhaconfir = cadastroUsuarioCacheModel.senhaconfir;

		if ((senhaconfir != null) && (senhaconfir.length() == 0)) {
			cadastroUsuarioCacheModel.senhaconfir = null;
		}

		cadastroUsuarioCacheModel.celular = getCelular();

		String celular = cadastroUsuarioCacheModel.celular;

		if ((celular != null) && (celular.length() == 0)) {
			cadastroUsuarioCacheModel.celular = null;
		}

		cadastroUsuarioCacheModel.sexo = getSexo();

		String sexo = cadastroUsuarioCacheModel.sexo;

		if ((sexo != null) && (sexo.length() == 0)) {
			cadastroUsuarioCacheModel.sexo = null;
		}

		Date date = getDate();

		if (date != null) {
			cadastroUsuarioCacheModel.date = date.getTime();
		}
		else {
			cadastroUsuarioCacheModel.date = Long.MIN_VALUE;
		}

		cadastroUsuarioCacheModel.cep = getCep();

		String cep = cadastroUsuarioCacheModel.cep;

		if ((cep != null) && (cep.length() == 0)) {
			cadastroUsuarioCacheModel.cep = null;
		}

		cadastroUsuarioCacheModel.estado = getEstado();

		String estado = cadastroUsuarioCacheModel.estado;

		if ((estado != null) && (estado.length() == 0)) {
			cadastroUsuarioCacheModel.estado = null;
		}

		cadastroUsuarioCacheModel.cidade = getCidade();

		String cidade = cadastroUsuarioCacheModel.cidade;

		if ((cidade != null) && (cidade.length() == 0)) {
			cadastroUsuarioCacheModel.cidade = null;
		}

		cadastroUsuarioCacheModel.rua = getRua();

		String rua = cadastroUsuarioCacheModel.rua;

		if ((rua != null) && (rua.length() == 0)) {
			cadastroUsuarioCacheModel.rua = null;
		}

		cadastroUsuarioCacheModel.profissao = getProfissao();

		String profissao = cadastroUsuarioCacheModel.profissao;

		if ((profissao != null) && (profissao.length() == 0)) {
			cadastroUsuarioCacheModel.profissao = null;
		}

		cadastroUsuarioCacheModel.hospital = getHospital();

		String hospital = cadastroUsuarioCacheModel.hospital;

		if ((hospital != null) && (hospital.length() == 0)) {
			cadastroUsuarioCacheModel.hospital = null;
		}

		return cadastroUsuarioCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(37);

		sb.append("{cpf=");
		sb.append(getCpf());
		sb.append(", rg=");
		sb.append(getRg());
		sb.append(", nome=");
		sb.append(getNome());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", sobrenome=");
		sb.append(getSobrenome());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", emailconfir=");
		sb.append(getEmailconfir());
		sb.append(", senha=");
		sb.append(getSenha());
		sb.append(", senhaconfir=");
		sb.append(getSenhaconfir());
		sb.append(", celular=");
		sb.append(getCelular());
		sb.append(", sexo=");
		sb.append(getSexo());
		sb.append(", date=");
		sb.append(getDate());
		sb.append(", cep=");
		sb.append(getCep());
		sb.append(", estado=");
		sb.append(getEstado());
		sb.append(", cidade=");
		sb.append(getCidade());
		sb.append(", rua=");
		sb.append(getRua());
		sb.append(", profissao=");
		sb.append(getProfissao());
		sb.append(", hospital=");
		sb.append(getHospital());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(58);

		sb.append("<model><model-name>");
		sb.append("com.icesp.cadastro.model.cadastroUsuario");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>cpf</column-name><column-value><![CDATA[");
		sb.append(getCpf());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rg</column-name><column-value><![CDATA[");
		sb.append(getRg());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nome</column-name><column-value><![CDATA[");
		sb.append(getNome());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sobrenome</column-name><column-value><![CDATA[");
		sb.append(getSobrenome());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailconfir</column-name><column-value><![CDATA[");
		sb.append(getEmailconfir());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>senha</column-name><column-value><![CDATA[");
		sb.append(getSenha());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>senhaconfir</column-name><column-value><![CDATA[");
		sb.append(getSenhaconfir());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>celular</column-name><column-value><![CDATA[");
		sb.append(getCelular());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sexo</column-name><column-value><![CDATA[");
		sb.append(getSexo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>date</column-name><column-value><![CDATA[");
		sb.append(getDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cep</column-name><column-value><![CDATA[");
		sb.append(getCep());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estado</column-name><column-value><![CDATA[");
		sb.append(getEstado());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cidade</column-name><column-value><![CDATA[");
		sb.append(getCidade());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rua</column-name><column-value><![CDATA[");
		sb.append(getRua());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>profissao</column-name><column-value><![CDATA[");
		sb.append(getProfissao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hospital</column-name><column-value><![CDATA[");
		sb.append(getHospital());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = cadastroUsuario.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			cadastroUsuario.class
		};
	private String _cpf;
	private String _rg;
	private String _nome;
	private String _userName;
	private String _sobrenome;
	private String _email;
	private String _emailconfir;
	private String _senha;
	private String _senhaconfir;
	private String _celular;
	private String _sexo;
	private Date _date;
	private String _cep;
	private String _estado;
	private String _cidade;
	private String _rua;
	private String _profissao;
	private String _hospital;
	private cadastroUsuario _escapedModelProxy;
}